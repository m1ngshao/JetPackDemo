apply plugin : 'jacoco'

android {
    buildTypes{
        debug{
            testCoverageEnabled = true
        }
    }
}

def converageSourceDirs = [
        '../app/src/main/java'
]


def converageClassDirs = [
        '/app/build/intermediates/javac/debug/classes'
]

jacoco{
    toolVersion = "0.8.2"
}

tasks.register('jacocoTestReport', JacocoReport) {
    group = "JacocoReport"
    description = Generate Jacoco coverage reports after running test
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories.from = files(files(converageClassDirs)).files.collect({
        println("$rootDir" + it)
        fileTree(dir: "$rootDir" + it,

                excludes: ['**/R*.class',
                           '**/*$InjectAdapter.class',
                           '**/*$ModuleAdapter.class',
                           '**/*$ViewInjector*.class'
                ])
    })

    sourceDirectories.from = files(converageSourceDirs)
    executionData.from = files("$buildDir/outputs/code-converage/converage")

    doFirst {
        converageClassDirs.each { path ->
            println("$rootDir" + path)
            new File("$rootDir" + path).eachFileRecurse { file ->
                if (file.name.contains('$$')) {
                    file.renameTo(file.path.replace('$$', '$'))
                }
            }
        }
    }
}

tasks.register('jacocoInit') {
    group = "JacocoReport"
    doFirst {
        File file = new File("$buildDir/outputs/code-converage/")
        if (!file.exists()) {
            file.mkdir()
        }
    }
}